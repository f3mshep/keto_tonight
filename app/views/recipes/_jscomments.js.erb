class Comment {
    constructor(argument){
        this.serialized = undefined
        this.postURL = undefined
        this.content = undefined
        this.id = argument.id
        this.selector = argument
    }

    setContent(){
        this.content = this.selector.getElementsByTagName("p").namedItem("commentContent").innerHTML
    }

    setActionURL(){
        this.actionURL = "/comments/" + this.id.replace(/\D*/, "")
    }

    setPostURL(){
        this.postURL = this.selector.action.replace(/https?:\/\/localhost:3000/, "")
    }

    serializeForm(){
        this.serialized = $(this.selector).serialize()
    }

    postComment(){
        this.setPostUrl()
        this.serializeForm()
        let postThis = $.post(this.postURL, this.serialized, (data)=>{
            var commentHolder = document.createElement("div")
            commentHolder.id = "comment-" + data.id
            commentHolder.innerHTML = "<%= j (render(@comment)) %>"
            commentHolder.getElementsByTagName("p")[0].innerHTML = data.content
            commentHolder.getElementsByTagName("button")[0].id = data.id
            commentHolder.getElementsByTagName("button")[1].id = data.id
            document.getElementById("ajaxComments").appendChild(commentHolder)
            $('#leaveComment').modal('hide')
        })
        postThis.then($.proxy(function (resp) {
            let myId = "#comment-" + resp.id
            $(myId).click(this.deleteComment)
            const commentForm = document.getElementById("new_comment")
            commentForm.getElementsByTagName("textarea")[0].value = ""
            commentForm.getElementsByTagName("input").namedItem("commit").disabled = false
                }, this))
    }

    deleteComment(){
        this.setActionURL()
        debugger
        $.ajax({
        url: this.actionURL,
        type: 'DELETE',
        success: function(resp) {
                let myId = "#comment-" + resp.id
                $(myId).remove()
                }
            })
    }

    editComment(){
        this.setActionURL()
        this.setContent()
        let myUpdate = this.updateComment.bind(this)
        document.getElementById("js-comment").innerHTML = this.content
        $("#commitEdit").click(function(event){
            event.preventDefault()
            debugger
            myUpdate()
        })
    }

    updateComment(){
        let newContent = document.getElementById("js-comment").innerHTML
        let id = this.id.replace(/\D*/, "")
        let newData = {
            id: id,
            content: newContent
        }
        $.ajax({
            url: this.actionURL,
            type: "PATCH",
            data: newData
        })
    }
}



function addCommentListener(){
    $("#new_comment").submit(function (event) {
        event.preventDefault()
        let commentObj = new Comment(this)
        commentObj.postComment()

        $(this).removeClass("disabled")

    })
}

function addDeleteListener(){
    $(".js-delete").click(function (event) {
        event.preventDefault()
        let commentObj = new Comment(this.parentElement)
        commentObj.deleteComment()
    })
}

function addEditListener(){
    $(".js-edit").click(function (event) {
        event.preventDefault()
        let commentObj = new Comment(this.parentNode.parentNode)
        commentObj.editComment()
    })
}





$(function (){
    addCommentListener()
    addDeleteListener()
    addEditListener()
})